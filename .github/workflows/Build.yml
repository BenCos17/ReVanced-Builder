name: Build

on: 
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  patch:
    runs-on: windows-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@main

      - name: Downloading YouTube
        run: |
          # Get latest supported YouTube client version via ReVanced JSON
          # It will let us to download always latest YouTube apk supported by ReVanced team
          # https://github.com/revanced/revanced-patches/blob/main/patches.json
          $Parameters = @{
              Uri             = "https://raw.githubusercontent.com/revanced/revanced-patches/main/patches.json"
              UseBasicParsing = $true
          }
          $JSON = Invoke-RestMethod @Parameters
          $versions = ($JSON | Where-Object -FilterScript {$_.compatiblePackages.name -eq "com.google.android.youtube"}).compatiblePackages.versions
          $LatestSupported = $versions | Sort-Object -Descending -Unique | Select-Object -First 1
          $LatestSupported = $LatestSupported.replace(".", "-")

          # Get unique key to generate direct link
          # https://www.apkmirror.com/apk/google-inc/youtube/
          $Parameters = @{
          Uri             = "https://www.apkmirror.com/apk/google-inc/youtube/youtube-$($LatestSupported)-release/youtube-$($LatestSupported)-2-android-apk-download/"
              UseBasicParsing = $false # Disabled
              Verbose         = $true
          }
          $Request = Invoke-Webrequest @Parameters
          $nameProp = $Request.ParsedHtml.getElementsByClassName("accent_bg btn btn-flat downloadButton") | ForEach-Object -Process {$_.nameProp}

          $Parameters = @{
              Uri             = "https://www.apkmirror.com/apk/google-inc/youtube/youtube-$($LatestSupported)-release/youtube-$($LatestSupported)-2-android-apk-download/download/$($nameProp)"
              UseBasicParsing = $false # Disabled
              Verbose         = $true
          }
          $URL_Part = ((Invoke-Webrequest @Parameters).Links | Where-Object -FilterScript {$_.innerHTML -eq "here"}).href
          # Replace "&amp;" with "&" to make it work
          $URL_Part = $URL_Part.Replace("&amp;", "&")

          # Finally, get the real link
          $Parameters = @{
              Uri             = "https://www.apkmirror.com$URL_Part"
              OutFile         = "$PSScriptRoot\ReVanced\youtube.apk"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-Webrequest @Parameters

      - name: Downloading ReVanced CLI
        run: |
          # https://github.com/revanced/revanced-cli
          $Parameters = @{
              Uri             = "https://api.github.com/repos/revanced/revanced-cli/releases/latest"
              UseBasicParsing = $true
              Verbose         = $true
          }
          $Tag = (Invoke-RestMethod @Parameters).tag_name
          $Tag2 = $Tag.replace("v", "")
          $Parameters = @{
              Uri             = "https://github.com/revanced/revanced-cli/releases/download/$Tag/revanced-cli-$Tag2-all.jar"
              Outfile         = "$PSScriptRoot\revanced-cli.jar"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-RestMethod @Parameters

          (Get-Content -Path Release.md -Encoding utf8).replace("CLITag", $Tag) | Set-Content -Path Release.md -Encoding utf8 -Force

      - name: Downloading ReVanced Patches
        run: |
          # https://github.com/revanced/revanced-patches
          $Parameters = @{
              Uri             = "https://api.github.com/repos/revanced/revanced-patches/releases/latest"
              UseBasicParsing = $true
              Verbose         = $true
          }
          $Tag = (Invoke-RestMethod @Parameters).tag_name
          $Tag2 = $Tag.replace("v", "")
          $Parameters = @{
              Uri             = "https://github.com/revanced/revanced-patches/releases/download/$Tag/revanced-patches-$Tag2.jar"
              Outfile         = "$PSScriptRoot\revanced-patches.jar"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-RestMethod @Parameters

          (Get-Content -Path Release.md -Encoding utf8).replace("PatchesTag", $Tag) | Set-Content -Path Release.md -Encoding utf8 -Force

      - name: Downloading ReVanced Integrations
        run: |
          # https://github.com/revanced/revanced-integrations
          $Parameters = @{
              Uri             = "https://api.github.com/repos/revanced/revanced-integrations/releases/latest"
              UseBasicParsing = $true
              Verbose         = $true
          }
          $Tag = (Invoke-RestMethod @Parameters).tag_name
          $Parameters = @{
              Uri             = "https://github.com/revanced/revanced-integrations/releases/download/$Tag/app-release-unsigned.apk"
              Outfile         = "$PSScriptRoot\app-release-unsigned.apk"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-RestMethod @Parameters

          (Get-Content -Path Release.md -Encoding utf8).replace("IntegrationsTag", $Tag) | Set-Content -Path Release.md -Encoding utf8 -Force

      - name: Downloading GmsCore
        run: |
          # https://github.com/microg/GmsCore
          $Parameters = @{
              Uri             = "https://api.github.com/repos/microg/GmsCore/releases/latest"
              UseBasicParsing = $true
              Verbose         = $true
          }
          $Tag = (Invoke-RestMethod @Parameters).tag_name
          $URL = ((Invoke-RestMethod @Parameters).assets | Where-Object -FilterScript {$_.browser_download_url -notmatch "asc"}).browser_download_url
          $Parameters = @{
               Uri             = $URL
               Outfile         = "$PSScriptRoot\microg.apk"
               UseBasicParsing = $true
               Verbose         = $true
          }
          Invoke-RestMethod @Parameters

          (Get-Content -Path Release.md -Encoding utf8).replace("GmsCoreTag", $Tag) | Set-Content -Path Release.md -Encoding utf8 -Force

      - name: Downloading latest Zulu JDK
        run: |
          # https://github.com/ScoopInstaller/Java/blob/master/bucket/zulu-jdk.json
          $Parameters = @{
              Uri             = "https://raw.githubusercontent.com/ScoopInstaller/Java/master/bucket/zulu-jdk.json"
              UseBasicParsing = $true
              Verbose         = $true
          }
          $URL = (Invoke-RestMethod @Parameters).architecture."64bit".url
          $Tag = (Invoke-RestMethod @Parameters).version
          $Parameters = @{
              Uri             = $URL
              Outfile         = "$PSScriptRoot\jdk_windows-x64_bin.zip"
              UseBasicParsing = $true
              Verbose         = $true
          }
          Invoke-RestMethod @Parameters

          (Get-Content -Path Release.md -Encoding utf8).replace("ZuluTag", $Tag) | Set-Content -Path Release.md -Encoding utf8 -Force

      - name: Expanding Zulu JDK
        run: |
          # Expand jdk_windows-x64_bin archive
          $Parameters = @{
              Path            = "$PSScriptRoot\jdk_windows-x64_bin.zip"
              DestinationPath = "$PSScriptRoot\jdk_windows-x64_bin"
              Force           = $true
              Verbose         = $true
          }
          Expand-Archive @Parameters

          Remove-Item -Path "$PSScriptRoot\jdk_windows-x64_bin.zip" -Force

      - name: Building
        run: |
          # https://github.com/revanced/revanced-patches
          & "$PSScriptRoot\jdk_windows-x64_bin\zulu*win_x64\bin\java.exe" `
          -jar "$PSScriptRoot\revanced-cli.jar" `
          --apk "$PSScriptRoot\youtube.apk" `
          --bundles "$PSScriptRoot\revanced-patches.jar" `
          --merge "$PSScriptRoot\app-release-unsigned.apk" `
          --exclude timeline-ads `
          --exclude premium-icon-reddit `
          --exclude general-reddit-ads `
          --exclude pflotsh-ecmwf-subscription-unlock `
          --exclude minimized-playback-music --exclude tasteBuilder-remover --exclude hide-get-premium --exclude compact-header --exclude upgrade-button-remover --exclude background-play --exclude music-microg-support --exclude music-video-ads --exclude codecs-unlock --exclude exclusive-audio-playback `
          --exclude promo-code-unlock `
          --exclude tiktok-download --exclude tiktok-seekbar --exclude tiktok-ads `
          --exclude swipe-controls --exclude downloads --exclude amoled --exclude hide-autoplay-button --exclude premium-heading --exclude disable-fullscreen-panels --exclude old-quality-layout --exclude enable-wide-searchbar --exclude tablet-mini-player --exclude always-autorepeat --exclude enable-debugging --exclude custom-playback-speed --exclude hide-infocard-suggestions `
          --clean `
          --temp-dir "$PSScriptRoot\Temp" `
          --out "$PSScriptRoot\revanced.apk"

      - name: Creating archive
        run: |
          $Parameters = @{
              Path             = "$PSScriptRoot\revanced.apk", "$PSScriptRoot\microg.apk"
              DestinationPath  = "ReVanced.zip"
              CompressionLevel = "Fastest"
              Force            = $true
          }
          Compress-Archive @Parameters

      - name: Release.md
        id: read_release
        run: |
          # https://en.wikipedia.org/wiki/Percent-encoding
          $Release = (Get-Content -Path Release.md -Encoding utf8 -Raw).replace("%", "%25").replace("`n", "%0A").replace("`r", "%0D")

          # https://trstringer.com/github-actions-multiline-strings/
          echo "::set-output name=RELEASE_BODY::$Release"

      - name: Uploading ReVanced.zip to release
        uses: svenstaro/upload-release-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ReVanced.zip
          tag: ${{ github.ref }}
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}
          overwrite: true
          file_glob: true
          prerelease: $false
